# Default values for imagepullsecret-patcher.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: "ghcr.io"
  repository: tamcore/imagepullsecret-patcher
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

resources:
  requests:
    cpu: 10m
    memory: 15Mi
  limits:
    cpu: 200m
    memory: 100Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: 8081
  initialDelaySeconds: 15
  periodSeconds: 20

readinessProbe:
  httpGet:
    path: /readyz
    port: 8081
  initialDelaySeconds: 5
  periodSeconds: 10

monitoring:
  enabled: false
  podMonitor:
    enabled: false
    # -- scrape interval
    interval: 10s
    # -- scrape timeout
    scrapeTimeout: 10s
  prometheusRule:
    # -- Deploy a PrometheusRule
    enabled: false
    # -- PrometheusRule.Spec
    # https://awesome-prometheus-alerts.grep.to/rules
    spec: []

# Additional volumes on the output Deployment definition.
volumes: []
  # - name: &volumeName src-dockerconfigjson
  #   secret: 
  #     secretName: global-imagepullsecret-source

# Volume mount to secret containing dockerconfigjson
volumeMounts: []
  # - name: *volumeName
  #   mountPath: "/secrets"
  #   readOnly: true

# Check README to get full information about environments that can be setup
env:
  # show DEBUG logs
  CONFIG_DEBUG: "false"
  # path to json file containing credentials for the registry to be distributed
  # /secrets/.dockerconfigjson, if your imagePullSecret is mounted to /secrets
  CONFIG_DOCKERCONFIGJSONPATH: ""
  # comma-separated namespaces excluded from processing
  CONFIG_EXCLUDED_NAMESPACES: "kube-*"
  # set name of managed secrets
  CONFIG_SECRETNAME: "global-imagepullsecret"
  # custom annotation to look for, when excluding namespaces
  # CONFIG_EXCLUDE_ANNOTATION: "example.com/imagepullsecret-patcher-exclude"

nodeSelector: {}

tolerations: []

affinity: {}
